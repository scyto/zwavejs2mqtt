# NOTE: This Dockerfile only works with BuildKit enabled.
# Please find instructions on how to run it in README.md.
ARG SRC=git-clone-src

##### GIT CLONE #####
FROM node:erbium-alpine3.12 AS git-clone-src
ARG ZWJ_BRANCH=master
ARG Z2M_BRANCH=master
WORKDIR /home/node
RUN apk update && apk add --no-cache jq python3 alpine-sdk build-base linux-headers 
RUN git clone -b ${ZWJ_BRANCH} --depth 1 https://github.com/zwave-js/node-zwave-js 
RUN git clone -b ${Z2M_BRANCH} --depth 1 https://github.com/zwave-js/zwavejs2mqtt

##### LOCAL SOURCE #####
FROM node:erbium-alpine3.12 AS local-copy-src
RUN apk update && apk add --no-cache jq python3 alpine-sdk build-base linux-headers 
COPY node-zwave-js /home/node/node-zwave-js
COPY zwavejs2mqtt /home/node/zwavejs2mqtt

##### BUILD #####
FROM ${SRC} AS build
ARG YARN_NETWORK_TIMEOUT=300000
WORKDIR /home/node/node-zwave-js

RUN rm -f package-lock.json \
    && yarn install --network-timeout=${YARN_NETWORK_TIMEOUT} \
    && yarn run build:full \
    && yarn install --production --frozen-lockfile    

RUN for i in config core serial shared; do \
    cd packages/$i && \
    yarn version --no-git-tag-version --new-version $(yarn versions --json| \
        jq -r '[.data."@zwave-js/'${i}'"]'[0])-$(git rev-parse --short HEAD) && \
    yarn link && \
    cd ../..; \
    done

RUN cd packages/zwave-js && \
    yarn version --no-git-tag-version --new-version $(yarn versions --json| \
        jq -r '[.data."zwave-js"]'[0])-$(git rev-parse --short HEAD) && \
    yarn link

WORKDIR /home/node/zwavejs2mqtt

RUN yarn install --network-timeout=${YARN_NETWORK_TIMEOUT} \
    && yarn run build \
    && yarn install --production --frozen-lockfile \
    && yarn version -s --no-git-tag-version --new-version $(yarn versions --json| \
    jq -r .data.zwavejs2mqtt)+$(git rev-parse --short HEAD) \
    && yarn link zwave-js @zwave-js/core @zwave-js/config @zwave-js/serial @zwave-js/shared \
    && mkdir my_dist \
    && cp -Lr .git app.js package.json bin config dist hass lib public store views node_modules my_dist/
    

# FROM node:
FROM node:erbium-alpine3.12
LABEL maintainer="robertsLando"
ENV NODE_ENV production
RUN apk update \
   && apk add --no-cache git 
COPY --from=build --chown=node /home/node/zwavejs2mqtt/my_dist /usr/src/app
WORKDIR /usr/src/app
EXPOSE 8091
USER root
CMD ["node", "bin/www"]
